:autocmd InsertEnter * set cul
:autocmd InsertLeave * set nocul

syntax enable
set noerrorbells
set tabstop=4 
set softtabstop=4
set shiftwidth=4

set expandtab
set smartindent
set autoindent

set hidden
set nobackup
set noswapfile
set nowritebackup
set nocompatible
set undofile
set undodir=~/.vim/undodir
set undofile
set incsearch
" set colorcolumn=80

set cmdheight=1
set runtimepath+=~/.vim_runtime
set encoding=utf-8
set viminfo='20
set modifiable

set number relativenumber
set nonumber norelativenumber " turn hybrid line numbers off
set number! relativenumber!   " toggle hybrid line numbers

set foldmethod=indent
set foldlevel=99
set cursorline
set showmatch

" split bar char fill
set fillchars+=vert:\ 

" share clipboard with system
set clipboard=unnamed
" set foldmethod=marker

" Ranger setups
nmap rr :Ranger<CR>

" NERDTree setups
nmap nt :NERDTreeToggle<CR>
let NERDTreeWinSize=30
let NERDTreeShowHidden=1

" Tlist setups
" tl to jump to it
nmap tl :TlistOpen<CR> 
let Tlist_WinWidth=30
let Tlist_Use_Right_Window=0
let Tlist_Auto_Update=1
let Tlist_File_Fold_Auto_Close=1
let Tlist_Exit_OnlyWindow=1

" WinManager setups
nmap wm :WMToggle<CR>
let g:winManagerWidth=30

" http://wuyudong.com/2015/12/29/1635.html
" additional actions required in ~/.vim/plugin/winmanager.vim
" add <exe 'q'> after <call s:StartWindowsManager()> 
"   in func ToggleWindowsManager 
let g:NERDTree_title="[NERDTree]"
let g:winManagerWindowLayout="NERDTree|TagList"
function! NERDTree_Start()
    exec 'NERDTree'
endfunction
function! NERDTree_IsValid()
    return 1
endfunction
nmap wm :WMToggle<CR>

" gruvbox dark
autocmd vimenter * colorscheme gruvbox
set bg=dark
set colorcolumn=80

" leader key remap
let mapleader = "\<space>"

nnoremap <leader>q :q<CR>
nnoremap <leader>/ :set hlsearch!<CR>

" Remap Escape to quit terminal normal
" https://github.com/vim/vim/issues/2216
tnoremap <Esc> <C-\><C-N> 
nnoremap <leader>t :terminal<CR>
nnoremap <leader>v :vertical terminal<CR>

" quick page rolling
" nnoremap <leader>n :bnext<CR>
nnoremap <leader>[ <C-b>
nnoremap <leader>] <C-f>

" fzf file finder
nnoremap <leader>f :Files<CR>
nnoremap <leader>fg :GFiles<CR>

" fugitive git commands
nnoremap <leader>gl :diffget //3<CR>
nnoremap <leader>gh :diffget //2<CR>
nnoremap <leader>gs :G<CR>

" buffer magic
nnoremap <leader>1 :buffer 1<CR>
nnoremap <leader>2 :buffer 2<CR>
nnoremap <leader>3 :buffer 3<CR>
nnoremap <leader>4 :buffer 4<CR>
nnoremap <leader>5 :buffer 5<CR>
nnoremap <leader>6 :buffer 6<CR>
nnoremap <leader>7 :buffer 7<CR>
nnoremap <leader>8 :buffer 8<CR>
nnoremap <leader>9 :ls<CR>
nnoremap <leader>0 :bd<CR>
nnoremap <leader><Tab> :bnext<CR>

" Elegant splitting
" nnoremap <leader><Tab> <C-W><C-W>
nnoremap <leader>j <C-W><C-j>
nnoremap <leader>k <C-W><C-k>
nnoremap <leader>l <C-W><C-l>
nnoremap <leader>h <C-W><C-h>
nnoremap <leader>J <C-W>J
nnoremap <leader>K <C-W>K
nnoremap <leader>L <C-W>L
nnoremap <leader>H <C-W>H

nnoremap <leader>i oimport ipdb;ipdb.set_trace()<esc>
nnoremap <leader>o :browse oldfiles<CR>
nnoremap <leader>u :UndotreeShow<CR>
nnoremap <leader>r :Rg<SPACE>
nnoremap <leader>g :YcmCompleter GoToDefinition<CR>

nnoremap <leader>s :split<CR>
nnoremap <leader>a :vsplit<CR>

nmap <leader>= :vertical resize +5<CR>
nmap <leader>- :vertical resize -5<CR>
nmap <leader>, :res -5<CR>
nmap <leader>. :res +5<CR>

inoremap <expr> <CR> (pumvisible() ? "\<c-y>\<cr>" : "\<CR>")
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>" 


" VUNDLE PLUGIN SECTION "
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" latex support
Plugin 'vim-latex/vim-latex'

" ranger integration
Plugin 'francoiscabrol/ranger.vim'

Plugin 'ycm-core/YouCompleteMe'
Plugin 'mbbill/undotree'

Plugin 'jremmen/vim-ripgrep'

Plugin 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plugin 'junegunn/fzf.vim'
" let g:fzf_layout = { 'window': { 'width': 0.8, 'height': 0.8 } }

Plugin 'jpalardy/vim-slime'
Plugin 'hanschen/vim-ipython-cell'

Plugin 'chrisbra/csv.vim'
Plugin 'morhetz/gruvbox'

Plugin 'google/vim-maktaba'
Plugin 'google/vim-codefmt'
Plugin 'google/vim-glaive'

Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-commentary'
" Plugin 'tpope/vim-dispatch'

Plugin 'VundleVim/Vundle.vim'
Plugin 'yegappan/taglist', {'rtp': 'vim/'}

Plugin 'sonph/onehalf', {'rtp': 'vim/'}
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

Plugin 'heavenshell/vim-pydocstring', { 'do': 'make install' }
let g:pydocstring_formatter = 'numpy'
let g:pydocstring_doq_path = '/home/shu/anaconda3/bin/doq'

" let g:airline_theme='onehalfdark' " third-party scheme
let g:airline_theme='raven' " official airline scheme
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tabline#left_sep=' '
" 'deus', 'angr', 'atomic', 'bubblegum', 'molokai', 'raven'

" NERDTree
Plugin 'preservim/nerdtree'
let NERDTreeShowLineNumbers=1
autocmd FileType nerdtree setlocal relativenumber
" extra colorscheme
" Plugin 'tiagofumo/vim-nerdtree-syntax-highlight'

" Pandoc Family
Plugin 'vim-pandoc/vim-pandoc'
Plugin 'vim-pandoc/vim-pandoc-syntax'
Plugin 'vim-pandoc/vim-rmarkdown'
" let g:pandoc#modules#disabled = ["spell"]

" force filetype to rmarkdown again explicitly
au! BufRead,BufNewFile *.Rmd  set filetype=rmarkdown

let python_highlight_all=1

call vundle#end()

" get rid of underscore highlighting in markdown
syn match markdownError "\w\@<=\w\@="
" syn clear markdownError

" filetype plugin indent on
" To ignore plugin indent changes, instead use:
filetype on " ON for TagList
filetype plugin on
